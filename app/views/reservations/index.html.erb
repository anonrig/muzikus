<style type="text/css">
	.scroll {
		max-height: 150px;
	  	overflow-y: scroll;
	}
	.scroll::-webkit-scrollbar {
    	width: 12px;
	}

	.scroll::-webkit-scrollbar-track {
	    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
	    border-radius: 10px;
	}

	.scroll::-webkit-scrollbar-thumb {
	    border-radius: 10px;
	    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
	}
</style>

<div role="main" class="main">
	<section class="page-header">
		<div class="container">
			<div class="row">
				<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
					<ul class="breadcrumb">
						<li><%= link_to "HOME", root_path %></li>
						<li>ALFONSO</li>
						<li class="active">RESERVATIONS</li>
					</ul>
				</div>
			</div>
			<div class="row">
				<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
					<div>
						<h1>Introducing the new <strong>Alfonso</strong>.</h1>
					</div>
				</div>
			</div>
		</div>
	</section>
	

	<div class="container">
		<div id="reservation_result" class="alert" role="alert" data-bind="css: alertColor, html: alertMessage" style="display: none;">
		</div>

		<h4>Here is a list of all <strong>reservations.</strong> Feel free to make yours. Today.</h4>

		<div class="row">
			<div class="col-lg-8">
				<% if (@reservations.count > 0) %>
            		<table class="hover stripe" id="reserveTable">
						<thead>
							<tr>
								<th>Name</th>
								<th>Room</th>
								<th>Date</th>
								<th>Day</th>
								<th>Time</th>
								<th></th>
							</tr>
						</thead>
						<tbody>
							<% @reservations.each do |item| %>
							<% member = @memberList.select{|x| x.id == item.user_id}.first %>
							<% room = @rooms.select{|x| x.id == item.room_id}.first %>
								<tr>
									<td><%= member.nil? ? "User does not exist..." : member.name %></td>
									<td><%= room.nil? ? "Room does not exist..." : room.name %></td>
									<td><%= item.start_at.strftime("%B %d, %Y") %></td>
									<td><%= item.start_at.strftime("%A") %></td>
									<td><%= item.start_at.strftime("%H:%M") %> - <%= item.end_at.strftime("%H:%M") %></td>
									<td style="text-align: right;">
									<% if not member.nil? %>
										<%= link_to "<i class=\"fa fa-user\"></i>".html_safe, profile_path(member.email.split('@')[0]), :style => "color:#9E9E9E" %>
									<% end %>
									<%  if ((current_user.id == item.user_id) || (not Manager.where(room_id: item.room_id, user_id: current_user.id).first.nil?)) && Time.now < item.end_at %>
										<%= link_to "<i class=\"fa fa-trash\"></i>".html_safe, reservation_destroy_path(item), method: :delete, data: { confirm: 'Are you sure?' }, :style => "color:#9E9E9E"%>
									<% end %>
									</td>
								</tr>
							<% end %>
						</tbody>
					</table>                    		
				<% else %>
					<img style="display: block; margin-left: auto; margin-right: auto;" src="/idontalways.png" />
				<% end %>
			</div>
            <div class="col-lg-4">
	            <div class="body">
	                <h4>New Reservation?</h4><hr>
					<% room_options = @rooms.collect{|x| [x.name, x.id]} %>
					<%= form_for @newReservation, :url => {:controller => "reservations", :action => "create"} do |f| %>
						<% if current_user && current_user.is_workshop && current_user.is_drum %>
							<%= f.select :room_id, options_for_select(room_options), {:include_blank => "Select One"}, id: :reservation_room_id, :class => "form-control show-tick", data: {bind: 'value: room_id'} %>
						<% elsif current_user && current_user.is_workshop && (not current_user.is_myk) %>
							<%= f.select :room_id, options_for_select(room_options, disabled: @drum_id), {:include_blank => "Select One"}, id: :reservation_room_id, :class => "form-control show-tick", data: {bind: 'value: room_id'} %>
						<% elsif current_user && current_user.is_drum && (not current_user.is_myk) %>
							<%= f.select :room_id, options_for_select(room_options, disabled: @hangar_id), {:include_blank => "Select One"}, id: :reservation_room_id, :class => "form-control show-tick", data: {bind: 'value: room_id'} %>
						<% elsif current_user && (not current_user.is_myk) %>
							<%= f.select :room_id, options_for_select(room_options, disabled: [@hangar_id, @drum_id]), {:include_blank => "Select One"}, id: :reservation_room_id, :class => "form-control show-tick", data: {bind: 'value: room_id'} %>
						<% else %> 
							<%= f.select :room_id, options_for_select(room_options), {:include_blank => "Select One"}, id: :reservation_room_id, :class => "form-control show-tick", data: {bind: 'value: room_id'} %>
						<% end %>
						
						<br>
						<div class="row">
							<div class="col-lg-6 col-md-6">
								<%= f.text_field :start_at, id: :start_date, :class => 'form-control', data: {bind: 'textInput: start_at'} %><br>
							</div>					
							<div class="col-lg-6 col-md-6">
								<%= f.text_field :end_at, id: :end_date, :class => "form-control", data: {bind: 'textInput: end_at'} %><br>
							</div>					
						</div>

						<%= f.hidden_field :is_canceled, id: :is_canceled, :value => false, data: {bind: 'value: is_canceled'} %>
						<%= f.hidden_field :user_id, id: :user_id, :value => current_user.id, data: {bind: 'value: user_id'} %>
						<div class="form-group">
							<%= f.submit "RESERVE!", :class =>"btn btn-primary btn-block", id: :submit_reservation, data: {bind: 'click: saveReservation, disable: !isFormValid()'} %>
						</div>
					<% end %>
					<div>
						<ul class="nav nav-tabs tab-nav-right hidden" role="tablist" id="room_tabs">
							<li role="presentation" class="active"><a href="#room0" data-toggle="tab" id="tab">EMPTY</a></li>
							<% room_options.each do |room| %>
							<li role="presentation" ><a href="#room<%=room[1]%>" data-toggle="tab" id="tab<%=room[1]%>" ><%=room[0]%></a></li>
							<% end %>
						</ul>
						<div class="tab-content hidden" id="content">
							<div role="tabpanel" class="tab-pane fade in active hidden" id="room0">
								
							</div>
							<% room_options.each do |room| %>
							<div role="tabpanel" class="tab-pane fade" id="room<%=room[1]%>">
								<h5>May I present you the Studio <strong>Officer</strong>?</h5>
								<%	room_id = room[1] 
									managerTemp = Manager.where(room_id: room_id)
									names = []
									phones = []
									emails = []
									managerTemp.each do |temp|
										item = User.find(temp.user_id)
										names += [item.name.nil? ? "" : item.name]
										phones += [item.phone_num.nil? ? "" : item.phone_num]
										emails += [item.email]
									end %>
									<b>Name:	</b><%= names.join(" | ") %><br>
									<b>Phone:	</b><%= phones.join(" | ") %><br>
									<b>Email:	</b><%= emails.join(" | ") %>
								<br><br>
								<%	@schedule = {
												:Monday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Monday").order("start_at ASC"),
												:Tuesday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Tuesday").order("start_at ASC"),
												:Wednesday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Wednesday").order("start_at ASC"),
												:Thursday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Thursday").order("start_at ASC"),
												:Friday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Friday").order("start_at ASC"),
												:Saturday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Saturday").order("start_at ASC"),
												:Sunday => LessonSchedule.where("room_id = ? AND weekday = ?", room_id, "Sunday").order("start_at ASC")
												}
								count = 0
								@schedule.each { |sch|
									count+= sch[1].length
								}

								if count != 0
								%>
								<h5>Weekly <strong>Schedule</strong></h5><hr>
								<div class="scroll">
									<% @schedule.each do |sch| %>
										<% if not sch[1].length == 0 %>
											<h6><strong><%= sch[1][0].weekday %></strong></h6>
											<% sch[1].each do |item| %>
												<% lesson = @lessons.select{|x| x.id == item.faculty_lesson_id}.first %>
												<div class="input-group">
													<p style="margin-left: 15px;"><%= lesson.name %> | <%= item.start_at.strftime("%H:%M") %> - <%= item.end_at.strftime("%H:%M") %></p>
												</div>
											<% end %>
										<% end %>
									<% end %>
								</div>
								<%end%>
							</div>
							<% end %>
						</div>
					</div>
	            </div>
        	</div>
		</div>
	</div>
</div>
<script>
    var table = $('#reserveTable').DataTable({
					"columnDefs": [
						{ "orderable": false, "targets": [0, 1, 3, 5] }
					],
					"order": [[ 2, 'asc' ], [ 4, 'asc' ]],
					"paging": false
				});
</script>
<script src="/js/knockout-3.4.2.js"></script>
<script src="/vendor/momentjs/moment.js"></script>
<script src="/js/bootstrap-material-datetimepicker.js"></script>
<script type="text/javascript">
	$('#reservation_room_id').change(function() {
    	if ($(this).val() == 0)
    		$('#content').addClass('hidden');
    	else
			$('#content').removeClass('hidden');
    	id = "#tab";
    	id += $(this).val();
    	$(id).trigger('click');
		if(this.selectedIndex != 0)
			table.search(this.options[this.selectedIndex].text).draw();
		else
			table.search('').draw()
	});
</script>

<script type="text/javascript">
	var start = moment();
	start.set('second', 0)
	var end = moment(start);
	var end2 = moment(start);
	end.add(2, 'day');
	end.set('hour', 23);
	end.set('minute', 59);
	end2.add(2, 'hour');

	function ReservationViewModel(){
		var self = this;

		self.user_id = ko.observable('<%= current_user.id %>');
		self.room_id = ko.observable(0);
		self.start_at = ko.observable(start.format('ddd, DD MMM - HH:mm'));
		self.end_at = ko.observable(end2.format('ddd, DD MMM - HH:mm'));
		self.is_canceled = ko.observable(false);

		self.alertType = ko.observable();
		self.alertMessage = ko.observable();

		self.saveReservation = function(item, e){
			e.preventDefault();
			var jsonData = {
				utf8: $('[name=utf8]').val(),
				authenticity_token: $('[name=authenticity_token]').val(),
				reservation: {
					user_id: self.user_id(),
					room_id: self.room_id(),
					start_at: self.start_at(),
					end_at: $('#end_date').val(),
					is_canceled: self.is_canceled()
				}
			}

			$.ajax('/reservation/create', {
				method: 'POST',
				data: JSON.stringify(jsonData),
				contentType: 'application/json'
			}).done((result) => {
				self.alertType(result.type)
				self.alertMessage(result.message)

				var htmlString = 	`<a style="color:#9E9E9E" href="/scout/profile/${result.data.user.email.split('@')[0]}">
										<i class="fa fa-user"></i>
									</a>
									<a style="color:#9E9E9E" href="/reservation/destroy/${result.data.id}" rel="nofollow" data-method="delete" data-confirm="Are you sure?">
										<i class="fa fa-trash"></i>
									</a>`
				var rowNode = table.row.add([ 
					result.data.user.name,
					result.data.room_name,
					moment(result.data.start_at).format('MMMM DD, YYYY'),
					moment(result.data.start_at).format('dddd'),
					moment(result.data.start_at).format('HH:mm') + ' - ' + moment(result.data.end_at).format('HH:mm'),
					''
				]).draw().node()
				
				$($(rowNode).children()[5]).html(htmlString);
				$($(rowNode).children()[5]).css('text-align', 'right');
			}).fail((xhr, status) => {
				if(xhr.status == 406){
					self.alertType(xhr.responseJSON.type)
					self.alertMessage(xhr.responseJSON.message)
				}
				else{
					self.alertType('danger')
					self.alertMessage('Unexpected error occured while adding reservation.')
				}
			}).always(() => {
				$('#reservation_result').fadeIn(500)
				$([document.documentElement, document.body]).animate({
					scrollTop: $("section.page-header").offset().top
				}, 500);
				setTimeout(function(){
					$('#reservation_result').fadeOut(500)
				}, 5000)
			})
			
		}

		self.isFormValid = ko.pureComputed(function(){ return self.room_id() > 0 })
		self.alertColor = ko.pureComputed(function() { return 'alert-' + self.alertType() })
	}

	ko.applyBindings(new ReservationViewModel())
	
	$('#end_date').bootstrapMaterialDatePicker({
		format: 'ddd, DD MMM - HH:mm',
        weekStart: 1,
        currentDate: end2,
        minDate: start,
        maxDate: end2
	});
	$('#start_date').bootstrapMaterialDatePicker({
		format: 'ddd, DD MMM - HH:mm',
        weekStart: 1,
        currentDate: start,
        minDate: start,
        maxDate: end
	}).on('change', function(e, date){
        var date_changed = moment(date);
        date_changed.add(2, 'hour');
        $('#end_date').val(date_changed.format('ddd, DD MMM - HH:mm'));
        $('#end_date').bootstrapMaterialDatePicker('setDate', date_changed);
        $('#end_date').bootstrapMaterialDatePicker('setMinDate', date);
        $('#end_date').bootstrapMaterialDatePicker('setMaxDate', date_changed);
    });
</script>
